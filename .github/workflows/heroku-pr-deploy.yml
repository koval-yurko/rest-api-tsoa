name: Deploy PR to Heroku

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]

jobs:
  deploy-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm i

    - name: Generate OpenAPI spec
      run: npm run generate-spec

    - name: Build project
      run: npm run build

    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh

    - name: Create Heroku review app
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      run: |
        # Create a unique app name for this PR
        APP_NAME="${{ secrets.HEROKU_APP_NAME }}-pr-${{ github.event.number }}"
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        
        # Login to Heroku
        echo $HEROKU_API_KEY | heroku auth:token
        
        # Create the app if it doesn't exist
        heroku apps:info $APP_NAME || heroku create $APP_NAME --buildpack heroku/nodejs
        
        # Set the git remote
        heroku git:remote -a $APP_NAME

    - name: Deploy to Heroku PR app
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        # Deploy the current branch to the PR app
        git push heroku HEAD:main --force

    - name: Comment PR with deployment info
      uses: actions/github-script@v7
      with:
        script: |
          const appName = process.env.APP_NAME;
          const deploymentUrl = `https://${appName}.herokuapp.com`;
          const docsUrl = `https://${appName}.herokuapp.com/docs`;
          
          const comment = `ðŸš€ **PR Deployment Ready!**
          
          Your changes have been deployed to Heroku for testing:
          
          - **API Base URL**: ${deploymentUrl}
          - **Swagger UI**: ${docsUrl}
          - **Health Check**: ${deploymentUrl}/health
          - **OpenAPI Spec**: ${deploymentUrl}/swagger.json
          
          Test your changes before merging! ðŸ§ª`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  cleanup-pr:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh

    - name: Delete Heroku review app
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      run: |
        APP_NAME="${{ secrets.HEROKU_APP_NAME }}-pr-${{ github.event.number }}"
        
        # Login to Heroku
        echo $HEROKU_API_KEY | heroku auth:token
        
        # Delete the app if it exists
        heroku apps:destroy $APP_NAME --confirm $APP_NAME || echo "App $APP_NAME not found or already deleted"

    - name: Comment PR with cleanup info
      uses: actions/github-script@v7
      with:
        script: |
          const appName = `${{ secrets.HEROKU_APP_NAME }}-pr-${{ github.event.number }}`;
          
          const comment = `ðŸ§¹ **PR Deployment Cleaned Up**
          
          The Heroku review app \`${appName}\` has been deleted as this PR was closed.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
